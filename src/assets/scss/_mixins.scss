@use 'sass:list';

/**
  Utility to set the bottom margin on the last child of the container 
  it is applied to.

  @param {Number} $value
      The value of the margin to apply to the last child.
 */
@mixin last-child-margin-bottom($value: 0) {
  &:last-child {
    margin-bottom: #{$value};
  }
}

/**
   Mixin used to wrap a list of selectors inside a media query.
 
   Supports both min and max width queries, as well as an optional 
   sceeen type.
 
   @param {Number} $min 
       The minimum width of the screen
   @param {Number} $max
       The maximum width of the screen
   @param {String} $unit 
       Optional, the unit to use for the width
   @param {String} $media
       Optional, the type of screen to use
  */
@mixin respond-to($min: 0, $max: 0, $unit: 'px', $media: null) {
  $query: ();

  @if $media != null {
    $query: list.append($query, $media);
  }

  @if $min > 0 {
    @if list.length($query) > 0 {
      $query: list.append($query, ' and ');
    }

    $query: list.append($query, '(min-width: #{$min}#{$unit})');
  }

  @if $max > 0 {
    @if list.length($query) > 0 {
      $query: list.append($query, ' and ');
    }

    $query: list.append($query, '(max-width: #{$max}#{$unit})');
  }

  @if list.length($query) > 0 {
    @media #{$query} {
      @content;
    }
  } @else {
    @content;
  }
}

/**
   Use this mixin to easily wrap a list of selectors inside a media query 
   with a minimum width.
 
   @param {Number} $min 
       The minimum width of the screen
   @param {String} $unit 
       Optional, the unit to use for the width
   @param {String} $media
       Optional, the type of screen to use
  */
@mixin respond-to-min($min: 0, $unit: 'px', $screen: null) {
  @include respond-to($min, 0, $unit, $screen) {
    @content;
  }
}

/**
   Use this mixin to easily wrap a list of selectors inside a media query
   with a maximum width.
 
   @param {Number} $max 
       The maximum width of the screen
   @param {String} $unit 
       Optional, the unit to use for the width
   @param {String} $media
       Optional, the type of screen to use
  */
@mixin respond-to-max($max: 0, $unit: 'px', $screen: null) {
  @include respond-to(0, $max, $unit, $screen) {
    @content;
  }
}
